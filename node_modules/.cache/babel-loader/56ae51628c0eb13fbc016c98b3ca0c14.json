{"ast":null,"code":"import _defineProperty from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from './components/Grid';\nimport { update } from './utils';\nimport './Board.css';\n\nfunction Board({\n  matrix\n}) {\n  const _useState = useState(matrix),\n        _useState2 = _slicedToArray(_useState, 2),\n        board = _useState2[0],\n        setBoard = _useState2[1];\n\n  const handleonClick = () => {\n    let indexRowActive;\n    let indexBoardActive;\n    const matrixUpdate = board && board.map((row, boardIndex) => {\n      return row.map((grid, gridIndex) => {\n        if (grid.active) {\n          indexRowActive = gridIndex;\n          indexBoardActive = boardIndex;\n          return _objectSpread({}, grid, {\n            active: false\n          });\n        } else if (grid.enabled) {\n          if (indexRowActive === gridIndex && boardIndex - indexBoardActive === 1) {\n            return _objectSpread({}, grid, {\n              active: true\n            });\n          } else if (gridIndex - indexRowActive === 1 && boardIndex === indexBoardActive) {\n            return _objectSpread({}, grid, {\n              active: true\n            });\n          } else if (row[boardIndex][indexBoardActive].enabled) {\n            row[boardIndex - 1][indexRowActive + 1].active = true;\n            return grid;\n          } else {\n            return grid;\n          }\n        } else {\n          return grid;\n        }\n      });\n    });\n    console.log(matrixUpdate);\n    setBoard(matrixUpdate);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"help\",\n    onClick: handleonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Pidele ayuda a la aguilas\"), board && board.map(row => React.createElement(\"div\", {\n    key: row,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, row && row.map((grid, i) => React.createElement(Grid, {\n    key: i,\n    enabled: grid.enabled,\n    active: grid.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })))));\n}\n\nBoard.propTypes = {\n  matrix: PropTypes.arrayOf(PropTypes.shape({\n    enabled: PropTypes.bool,\n    active: PropTypes.bool\n  }))\n};\nexport default Board;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useState","PropTypes","Grid","update","Board","matrix","board","setBoard","handleonClick","indexRowActive","indexBoardActive","matrixUpdate","map","row","boardIndex","grid","gridIndex","active","enabled","console","log","i","propTypes","arrayOf","shape","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from './components/Grid';\nimport { update } from './utils';\nimport './Board.css';\n\nfunction Board({ matrix }) {\n  const [ board, setBoard ] = useState(matrix);\n  const handleonClick = () => {\n    let indexRowActive;\n    let indexBoardActive;\n    const matrixUpdate = board &&\n      board.map((row, boardIndex) => {\n        return row.map((grid, gridIndex) => {\n          if (grid.active) {\n            indexRowActive = gridIndex;\n            indexBoardActive = boardIndex;\n            return { ...grid, active: false }\n          } else if (grid.enabled) {\n            if (indexRowActive === gridIndex && boardIndex - indexBoardActive === 1) {\n              return { ...grid, active: true }\n            } else if (gridIndex - indexRowActive === 1 && boardIndex === indexBoardActive) {\n              return { ...grid, active: true }\n            } else if (row[boardIndex][indexBoardActive].enabled) {\n              row[boardIndex - 1][indexRowActive + 1].active = true;\n              return grid;  \n            } else {\n              return grid;\n            }\n          } else {\n            return grid;\n          }\n        })\n      });\n    console.log(matrixUpdate)\n    setBoard(matrixUpdate)\n  };\n\n  return (\n    <div className=\"board\">\n      <button className=\"help\" onClick={handleonClick}>Pidele ayuda a la aguilas</button>\n      {board && board.map(row => (\n        <div key={row} className=\"row\">\n          {row && row.map((grid, i) =>\n            <Grid key={i} enabled={grid.enabled} active={grid.active} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nBoard.propTypes = {\n  matrix: PropTypes.arrayOf(\n    PropTypes.shape({ enabled: PropTypes.bool, active: PropTypes.bool })\n  )\n};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}