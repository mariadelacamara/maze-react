{"ast":null,"code":"// export const update = (x, y, xi, yi, matrix) => {\n//   const matrixUpdate = matrix;\n//   matrixUpdate[x][y].active = false;\n//   matrixUpdate[xi][yi].active = true;\n//   return matrixUpdate;\n// }\n// const handleonClick = () => {\n//   let indexRowActive = board && board[0].findIndex(row => row.active);\n//   let indexBoardActive = 0;\n//   // const newFields = [\n//   //   ...board.slice(0, 1),\n//   //   board[1].merge({\n//   //     [nameField]: valueField,\n//   //     ebanled:true\n//   //   }),\n//   //   ...reportArray.slice(1 + 1)\n//   // ];\n//   const matrixUpdate = board &&\n//     board.map((row, boardIndex) => {\n//       return row.map((grid, gridIndex) => {\n//         if (grid.active) {\n//           indexRowActive = gridIndex;\n//           indexBoardActive = boardIndex;\n//           return { ...grid, active: false }\n//         } else if (grid.enabled) {\n//           if (indexRowActive === gridIndex && boardIndex - indexBoardActive === 1) {\n//             return { ...grid, active: true }\n//           } else if (gridIndex - indexRowActive === 1 && boardIndex === indexBoardActive) {\n//             return { ...grid, active: true }\n//           } else {\n//             return grid;\n//           }\n//         } else {\n//           return grid;\n//         }\n//       })\n//     });\n//   console.log(matrixUpdate)\n//   setBoard(matrixUpdate)\n// };","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// export const update = (x, y, xi, yi, matrix) => {\n//   const matrixUpdate = matrix;\n//   matrixUpdate[x][y].active = false;\n//   matrixUpdate[xi][yi].active = true;\n//   return matrixUpdate;\n// }\n\n// const handleonClick = () => {\n//   let indexRowActive = board && board[0].findIndex(row => row.active);\n//   let indexBoardActive = 0;\n//   // const newFields = [\n//   //   ...board.slice(0, 1),\n//   //   board[1].merge({\n//   //     [nameField]: valueField,\n//   //     ebanled:true\n//   //   }),\n//   //   ...reportArray.slice(1 + 1)\n//   // ];\n//   const matrixUpdate = board &&\n//     board.map((row, boardIndex) => {\n//       return row.map((grid, gridIndex) => {\n//         if (grid.active) {\n//           indexRowActive = gridIndex;\n//           indexBoardActive = boardIndex;\n//           return { ...grid, active: false }\n//         } else if (grid.enabled) {\n//           if (indexRowActive === gridIndex && boardIndex - indexBoardActive === 1) {\n//             return { ...grid, active: true }\n//           } else if (gridIndex - indexRowActive === 1 && boardIndex === indexBoardActive) {\n//             return { ...grid, active: true }\n//           } else {\n//             return grid;\n//           }\n//         } else {\n//           return grid;\n//         }\n//       })\n//     });\n//   console.log(matrixUpdate)\n//   setBoard(matrixUpdate)\n// };\n"]},"metadata":{},"sourceType":"module"}