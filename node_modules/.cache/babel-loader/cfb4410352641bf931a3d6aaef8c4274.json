{"ast":null,"code":"\"use strict\";\n\nfunction _interopDefault(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e.default : e;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar _partial = _interopDefault(require(\"ramda/src/partial\")),\n    _curry = _interopDefault(require(\"ramda/src/curry\")),\n    _pipeP = _interopDefault(require(\"ramda/src/pipeP\")),\n    _keys = _interopDefault(require(\"ramda/src/keys\")),\n    _forEach = _interopDefault(require(\"ramda/src/forEach\")),\n    _dissoc = _interopDefault(require(\"ramda/src/dissoc\")),\n    _merge = _interopDefault(require(\"ramda/src/merge\")),\n    _prop = _interopDefault(require(\"ramda/src/prop\")),\n    _always = _interopDefault(require(\"ramda/src/always\")),\n    _ifElse = _interopDefault(require(\"ramda/src/ifElse\")),\n    _contains = _interopDefault(require(\"ramda/src/contains\")),\n    _gte = _interopDefault(require(\"ramda/src/gte\")),\n    _curryN = _interopDefault(require(\"ramda/src/curryN\")),\n    _T = _interopDefault(require(\"ramda/src/T\")),\n    _is = _interopDefault(require(\"ramda/src/is\")),\n    _identity = _interopDefault(require(\"ramda/src/identity\")),\n    _isNil = _interopDefault(require(\"ramda/src/isNil\")),\n    _cond = _interopDefault(require(\"ramda/src/cond\")),\n    axios = _interopDefault(require(\"axios\")),\n    __assign = function () {\n  return (__assign = Object.assign || function (e) {\n    for (var r, t = 1, n = arguments.length; t < n; t++) for (var a in r = arguments[t]) Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a]);\n\n    return e;\n  }).apply(this, arguments);\n},\n    __awaiter = function (e, r, t, n) {\n  return new (t || (t = Promise))(function (a, i) {\n    function s(e) {\n      try {\n        u(n.next(e));\n      } catch (e) {\n        i(e);\n      }\n    }\n\n    function o(e) {\n      try {\n        u(n.throw(e));\n      } catch (e) {\n        i(e);\n      }\n    }\n\n    function u(e) {\n      e.done ? a(e.value) : new t(function (r) {\n        r(e.value);\n      }).then(s, o);\n    }\n\n    u((n = n.apply(e, r || [])).next());\n  });\n},\n    __generator = function (e, r) {\n  var t,\n      n,\n      a,\n      i,\n      s = {\n    label: 0,\n    sent: function () {\n      if (1 & a[0]) throw a[1];\n      return a[1];\n    },\n    trys: [],\n    ops: []\n  };\n  return i = {\n    next: o(0),\n    throw: o(1),\n    return: o(2)\n  }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n    return this;\n  }), i;\n\n  function o(i) {\n    return function (o) {\n      return function (i) {\n        if (t) throw new TypeError(\"Generator is already executing.\");\n\n        for (; s;) try {\n          if (t = 1, n && (a = 2 & i[0] ? n.return : i[0] ? n.throw || ((a = n.return) && a.call(n), 0) : n.next) && !(a = a.call(n, i[1])).done) return a;\n\n          switch (n = 0, a && (i = [2 & i[0], a.value]), i[0]) {\n            case 0:\n            case 1:\n              a = i;\n              break;\n\n            case 4:\n              return s.label++, {\n                value: i[1],\n                done: !1\n              };\n\n            case 5:\n              s.label++, n = i[1], i = [0];\n              continue;\n\n            case 7:\n              i = s.ops.pop(), s.trys.pop();\n              continue;\n\n            default:\n              if (!(a = (a = s.trys).length > 0 && a[a.length - 1]) && (6 === i[0] || 2 === i[0])) {\n                s = 0;\n                continue;\n              }\n\n              if (3 === i[0] && (!a || i[1] > a[0] && i[1] < a[3])) {\n                s.label = i[1];\n                break;\n              }\n\n              if (6 === i[0] && s.label < a[1]) {\n                s.label = a[1], a = i;\n                break;\n              }\n\n              if (a && s.label < a[2]) {\n                s.label = a[2], s.ops.push(i);\n                break;\n              }\n\n              a[2] && s.ops.pop(), s.trys.pop();\n              continue;\n          }\n\n          i = r.call(e, s);\n        } catch (e) {\n          i = [6, e], n = 0;\n        } finally {\n          t = a = 0;\n        }\n\n        if (5 & i[0]) throw i[1];\n        return {\n          value: i[0] ? i[1] : void 0,\n          done: !0\n        };\n      }([i, o]);\n    };\n  }\n},\n    _this = void 0,\n    toNumber = _cond([[_isNil, _identity], [_is(Number), _identity], [_T, function (e) {\n  return Number(e);\n}]]),\n    isWithin = _curryN(3, function (e, r, t) {\n  var n = _is(Number);\n\n  return n(e) && n(r) && n(t) && _gte(t, e) && _gte(r, t);\n}),\n    containsText = _curryN(2, function (e, r) {\n  return _contains(r, e);\n}),\n    isPromise = function (e) {\n  return !!e && (\"object\" == typeof e || \"function\" == typeof e) && \"function\" == typeof e.then;\n},\n    DEFAULT_HEADERS = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\"\n},\n    DEFAULT_CONFIG = {\n  timeout: 0\n},\n    NONE = null,\n    CLIENT_ERROR = \"CLIENT_ERROR\",\n    SERVER_ERROR = \"SERVER_ERROR\",\n    TIMEOUT_ERROR = \"TIMEOUT_ERROR\",\n    CONNECTION_ERROR = \"CONNECTION_ERROR\",\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n    CANCEL_ERROR = \"CANCEL_ERROR\",\n    TIMEOUT_ERROR_CODES = [\"ECONNABORTED\"],\n    NODEJS_CONNECTION_ERROR_CODES = [\"ENOTFOUND\", \"ECONNREFUSED\", \"ECONNRESET\"],\n    in200s = isWithin(200, 299),\n    in400s = isWithin(400, 499),\n    in500s = isWithin(500, 599),\n    statusNil = _ifElse(_isNil, _always(void 0), _prop(\"status\")),\n    getProblemFromError = function (e) {\n  return \"Network Error\" === e.message ? NETWORK_ERROR : axios.isCancel(e) ? CANCEL_ERROR : _cond([[_isNil, function () {\n    return getProblemFromStatus(statusNil(e.response));\n  }], [containsText(TIMEOUT_ERROR_CODES), _always(TIMEOUT_ERROR)], [containsText(NODEJS_CONNECTION_ERROR_CODES), _always(CONNECTION_ERROR)], [_T, _always(UNKNOWN_ERROR)]])(e.code);\n},\n    getProblemFromStatus = function (e) {\n  return _cond([[_isNil, _always(UNKNOWN_ERROR)], [in200s, _always(NONE)], [in400s, _always(CLIENT_ERROR)], [in500s, _always(SERVER_ERROR)], [_T, _always(UNKNOWN_ERROR)]])(e);\n},\n    create = function (e) {\n  var r,\n      t = _merge(DEFAULT_HEADERS, e.headers || {});\n\n  if (e.axiosInstance) r = e.axiosInstance;else {\n    var n = _merge(DEFAULT_CONFIG, _dissoc(\"headers\", e));\n\n    r = axios.create(n);\n  }\n\n  var a = [],\n      i = [],\n      s = [],\n      o = [],\n      u = [],\n      R = function (e, n) {\n    return t[e] = n, r;\n  },\n      c = function (e, r, t, n) {\n    return void 0 === t && (t = {}), void 0 === n && (n = {}), l(_merge({\n      url: r,\n      params: t,\n      method: e\n    }, n));\n  },\n      _ = function (e, r, t, n) {\n    return void 0 === t && (t = null), void 0 === n && (n = {}), l(_merge({\n      url: r,\n      method: e,\n      data: t\n    }, n));\n  },\n      l = function (e) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var n, a, o;\n      return __generator(this, function (u) {\n        switch (u.label) {\n          case 0:\n            if (e.headers = __assign({}, t, e.headers), i.length > 0 && _forEach(function (r) {\n              return r(e);\n            }, i), !(s.length > 0)) return [3, 6];\n            n = 0, u.label = 1;\n\n          case 1:\n            return n < s.length ? (a = s[n](e), isPromise(a) ? [4, a] : [3, 3]) : [3, 6];\n\n          case 2:\n            return u.sent(), [3, 5];\n\n          case 3:\n            return [4, a(e)];\n\n          case 4:\n            u.sent(), u.label = 5;\n\n          case 5:\n            return n++, [3, 1];\n\n          case 6:\n            return o = _pipeP(O(toNumber(new Date())), E), [2, r.request(e).then(o).catch(o)];\n        }\n      });\n    });\n  },\n      E = function (e) {\n    return a.forEach(function (r) {\n      try {\n        r(e);\n      } catch (e) {}\n    }), e;\n  },\n      O = _curry(function (e, r) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var t, n, a, i, s, R, c, _, l, E, O, f, N, p, d, T;\n\n      return __generator(this, function (m) {\n        switch (m.label) {\n          case 0:\n            if (t = toNumber(new Date()), n = t - e, a = r instanceof Error || axios.isCancel(r), i = r, s = r, R = a ? s.response : i, c = R && R.status || null, _ = a ? getProblemFromError(r) : getProblemFromStatus(c), l = a ? s : null, E = in200s(c), O = r.config || null, f = R && R.headers || null, N = R && R.data || null, p = {\n              duration: n,\n              problem: _,\n              originalError: l,\n              ok: E,\n              status: c,\n              headers: f,\n              config: O,\n              data: N\n            }, o.length > 0 && _forEach(function (e) {\n              return e(p);\n            }, o), !(u.length > 0)) return [3, 6];\n            d = 0, m.label = 1;\n\n          case 1:\n            return d < u.length ? (T = u[d](p), isPromise(T) ? [4, T] : [3, 3]) : [3, 6];\n\n          case 2:\n            return m.sent(), [3, 5];\n\n          case 3:\n            return [4, T(p)];\n\n          case 4:\n            m.sent(), m.label = 5;\n\n          case 5:\n            return d++, [3, 1];\n\n          case 6:\n            return [2, p];\n        }\n      });\n    });\n  });\n\n  return {\n    axiosInstance: r,\n    monitors: a,\n    addMonitor: function (e) {\n      a.push(e);\n    },\n    requestTransforms: i,\n    asyncRequestTransforms: s,\n    responseTransforms: o,\n    asyncResponseTransforms: u,\n    addRequestTransform: function (e) {\n      return i.push(e);\n    },\n    addAsyncRequestTransform: function (e) {\n      return s.push(e);\n    },\n    addResponseTransform: function (e) {\n      return o.push(e);\n    },\n    addAsyncResponseTransform: function (e) {\n      return u.push(e);\n    },\n    setHeader: R,\n    setHeaders: function (e) {\n      return _forEach(function (r) {\n        return R(r, e[r]);\n      }, _keys(e)), r;\n    },\n    deleteHeader: function (e) {\n      return delete t[e], r;\n    },\n    headers: t,\n    setBaseURL: function (e) {\n      return r.defaults.baseURL = e, r;\n    },\n    getBaseURL: function () {\n      return r.defaults.baseURL;\n    },\n    get: _partial(c, [\"get\"]),\n    delete: _partial(c, [\"delete\"]),\n    head: _partial(c, [\"head\"]),\n    post: _partial(_, [\"post\"]),\n    put: _partial(_, [\"put\"]),\n    patch: _partial(_, [\"patch\"]),\n    link: _partial(c, [\"link\"]),\n    unlink: _partial(c, [\"unlink\"])\n  };\n},\n    isCancel = axios.isCancel,\n    CancelToken = axios.CancelToken,\n    apisauce = {\n  DEFAULT_HEADERS: DEFAULT_HEADERS,\n  NONE: NONE,\n  CLIENT_ERROR: CLIENT_ERROR,\n  SERVER_ERROR: SERVER_ERROR,\n  TIMEOUT_ERROR: TIMEOUT_ERROR,\n  CONNECTION_ERROR: CONNECTION_ERROR,\n  NETWORK_ERROR: NETWORK_ERROR,\n  UNKNOWN_ERROR: UNKNOWN_ERROR,\n  create: create,\n  isCancel: isCancel,\n  CancelToken: CancelToken\n};\n\nexports.DEFAULT_HEADERS = DEFAULT_HEADERS, exports.NONE = NONE, exports.CLIENT_ERROR = CLIENT_ERROR, exports.SERVER_ERROR = SERVER_ERROR, exports.TIMEOUT_ERROR = TIMEOUT_ERROR, exports.CONNECTION_ERROR = CONNECTION_ERROR, exports.NETWORK_ERROR = NETWORK_ERROR, exports.UNKNOWN_ERROR = UNKNOWN_ERROR, exports.CANCEL_ERROR = CANCEL_ERROR, exports.getProblemFromError = getProblemFromError, exports.getProblemFromStatus = getProblemFromStatus, exports.create = create, exports.isCancel = isCancel, exports.CancelToken = CancelToken, exports.default = apisauce;","map":null,"metadata":{},"sourceType":"script"}