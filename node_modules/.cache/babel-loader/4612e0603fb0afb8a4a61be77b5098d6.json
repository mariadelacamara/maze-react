{"ast":null,"code":"import _toConsumableArray from\"/Users/a/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{RIGHT,LEFT,UP,DOWN}from'./constants';import{actionCreators}from'../../redux/Board/actions';export var updateBoard=function updateBoard(board,indexRow,indexSquare){var boardUpdated=[].concat(_toConsumableArray(board.slice(0,indexRow)),[[].concat(_toConsumableArray(board[indexRow].slice(0,indexSquare)),[{active:false,enabled:true}],_toConsumableArray(board[indexRow].slice(indexSquare+1)))],_toConsumableArray(board.slice(indexRow+1)));return boardUpdated;};export var canGoRight=function canGoRight(board,x,y){return board[x][y+1].enabled;};export var canGoLeft=function canGoLeft(board,x,y){return board[x][y-1].enabled;};export var canGoUp=function canGoUp(board,x,y){return x>0&&board[x-1][y].enabled;};export var canGoDown=function canGoDown(board,indexRow,indexSquare){return board[indexRow+1][indexSquare].enabled;};export var checkMove=function checkMove(board,indexRow,indexSquare,position,dispatch){switch(position){case DOWN:{if(canGoDown(board,indexRow,indexSquare)){dispatch(actionCreators.move(DOWN));return;}else if(canGoLeft(board,indexRow,indexSquare)){dispatch(actionCreators.move(LEFT));return;}else if(canGoRight(board,indexRow,indexSquare)){dispatch(actionCreators.move(RIGHT));return;}return;}case RIGHT:{if(canGoDown(board,indexRow,indexSquare)){dispatch(actionCreators.move(DOWN));return;}else if(canGoRight(board,indexRow,indexSquare)){dispatch(actionCreators.move(RIGHT));return;}else if(canGoUp(board,indexRow,indexSquare)){dispatch(actionCreators.move(UP));return;}else if(canGoLeft(board,indexRow,indexSquare)){dispatch(actionCreators.move(LEFT));return;}return;}case UP:{if(canGoUp(board,indexRow,indexSquare)){dispatch(actionCreators.move(UP));return;}else if(canGoRight(board,indexRow,indexSquare)){dispatch(actionCreators.move(RIGHT));return;}else if(canGoLeft(board,indexRow,indexSquare)){dispatch(actionCreators.move(LEFT));return;}else if(canGoDown(board,indexRow,indexSquare)){dispatch(actionCreators.move(DOWN));return;}return;}case LEFT:{if(canGoLeft(board,indexRow,indexSquare)&&!canGoUp(board,indexRow,indexSquare)){dispatch(actionCreators.move(LEFT));return;}else if(canGoDown(board,indexRow,indexSquare)){dispatch(actionCreators.move(DOWN));return;}else if(canGoUp(board,indexRow,indexSquare)){dispatch(actionCreators.move(UP));}else if(canGoRight(board,indexRow,indexSquare)){dispatch(actionCreators.move(RIGHT));return;}return;}default:{return;}}};","map":{"version":3,"sources":["/Users/a/Documents/Proyects/maze-react/src/components/Board/utils.js"],"names":["RIGHT","LEFT","UP","DOWN","actionCreators","updateBoard","board","indexRow","indexSquare","boardUpdated","slice","active","enabled","canGoRight","x","y","canGoLeft","canGoUp","canGoDown","checkMove","position","dispatch","move"],"mappings":"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","sourcesContent":["import { RIGHT, LEFT, UP, DOWN } from './constants';\nimport { actionCreators } from '../../redux/Board/actions';\n\nexport const updateBoard = (board, indexRow, indexSquare) => {\n  const boardUpdated = [\n    ...board.slice(0, indexRow),\n    [\n      ...board[indexRow].slice(0, indexSquare),\n      {\n        active: false,\n        enabled: true\n      },\n      ...board[indexRow].slice(indexSquare + 1 ),\n    ],\n    ...board.slice(indexRow + 1)\n  ];\n  return boardUpdated;\n};\n\nexport const canGoRight = (board, x, y) => board[x][y + 1].enabled;\n\nexport const canGoLeft = (board, x, y) => board[x][y - 1].enabled;\n\nexport const canGoUp = (board, x, y) => x > 0 && board[x - 1][y].enabled;\n\nexport const canGoDown = (board, indexRow, indexSquare) => board[indexRow + 1][indexSquare].enabled;\n\nexport const checkMove = (board, indexRow, indexSquare, position, dispatch) => {\n  switch (position) {\n    case DOWN: {\n      if (canGoDown(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(DOWN));\n        return;\n      } else if (canGoLeft(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(LEFT));\n        return;\n      } else if (canGoRight(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(RIGHT));\n        return;\n      }\n      return;\n    }\n    case RIGHT: {\n      if (canGoDown(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(DOWN));\n        return;\n      } else if (canGoRight(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(RIGHT));\n        return;\n      } else if (canGoUp(board, indexRow, indexSquare)){\n        dispatch(actionCreators.move(UP));\n        return;\n      } else if (canGoLeft(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(LEFT));\n        return;\n      }\n      return;\n    }\n    case UP: {\n      if (canGoUp(board, indexRow, indexSquare)){\n        dispatch(actionCreators.move(UP));\n        return;\n      }  else if (canGoRight(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(RIGHT));\n        return;\n      } else if (canGoLeft(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(LEFT));\n        return;\n      } else if (canGoDown(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(DOWN));\n        return;\n      }\n      return;\n    }\n    case LEFT: {\n      if (canGoLeft(board, indexRow, indexSquare) && !canGoUp(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(LEFT));\n        return;\n      } else if (canGoDown(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(DOWN));\n        return;\n      } else if (canGoUp(board, indexRow, indexSquare)){\n        dispatch(actionCreators.move(UP));\n      } else if (canGoRight(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(RIGHT));\n        return;\n      }\n      return;\n    }\n    default: {\n      return;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}