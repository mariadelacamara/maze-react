{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends3 = require('babel-runtime/helpers/extends');\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.createExternalActions = createExternalActions;\n\nvar _createTypes = require('../../creators/createTypes');\n\nvar _createTypes2 = _interopRequireDefault(_createTypes);\n\nvar _commonReducer = require('./commonReducer');\n\nvar _commonReducer2 = _interopRequireDefault(_commonReducer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar INVISIBLE_NAMESPACE = '$INVISIBLE';\n\nvar getSuperNamespace = function getSuperNamespace(actionName) {\n  return actionName.slice(0, actionName.indexOf(':'));\n};\n\nvar shouldBeExtended = function shouldBeExtended(action) {\n  return getSuperNamespace(action.type) === INVISIBLE_NAMESPACE;\n};\n\nvar getSliceName = function getSliceName(action, reducerObject) {\n  var sliceName = action.type.slice(action.type.indexOf(':') + 1, action.type.indexOf('/')).replace('#', '').toLowerCase();\n  (0, _keys2.default)(reducerObject).forEach(function (reducerName) {\n    if (reducerName.toLowerCase() === sliceName) sliceName = reducerName;\n  });\n  return sliceName;\n};\n\nvar formatActionName = function formatActionName(actionName) {\n  return actionName.slice(actionName.indexOf('/') + 1);\n};\n\nfunction wrapCombineReducers(CR) {\n  var invisibleReducer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _commonReducer2.default;\n\n  function combineReducers(reducerObject) {\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var action = arguments[1];\n      if (!shouldBeExtended(action)) return CR(reducerObject)(state, action);\n      var slice = getSliceName(action, reducerObject);\n      return (0, _extends4.default)({}, state, (0, _defineProperty3.default)({}, slice, invisibleReducer(state[slice], (0, _extends4.default)({}, action, {\n        type: formatActionName(action.type)\n      }))));\n    };\n  }\n\n  return combineReducers;\n}\n\nfunction createExternalActions(reducerName) {\n  var actionNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _commonReducer.defaultActionNames;\n  return (0, _createTypes2.default)(actionNames, INVISIBLE_NAMESPACE + ':#' + reducerName.toUpperCase());\n}\n\nexports.default = wrapCombineReducers;","map":null,"metadata":{},"sourceType":"script"}