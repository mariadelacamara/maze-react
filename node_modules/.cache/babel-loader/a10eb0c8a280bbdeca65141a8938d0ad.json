{"ast":null,"code":"import _slicedToArray from \"/Users/a/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/a/Documents/Proyects/maze-react/src/components/Board/index.js\";\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAlert } from \"react-alert\";\nimport { actions } from '../../redux/Board/actions';\nimport Square from './components/Square';\nimport { actionCreators } from '../../redux/Board/actions';\nimport { RIGHT, LEFT, UP, DOWN, MESSAGE_SUCCESS } from './constants';\nimport { canGoUp, canGoDown, canGoRight, canGoLeft, checkMove } from './utils';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        disableButtons = _useState4[0],\n        setDisableButtons = _useState4[1];\n\n  const _useSelector = useSelector(state => state.board),\n        board = _useSelector.board,\n        position = _useSelector.position,\n        finalized = _useSelector.finalized,\n        indexRow = _useSelector.indexRow,\n        indexSquare = _useSelector.indexSquare,\n        moves = _useSelector.moves;\n\n  useEffect(() => {\n    if (start) {\n      setTimeout(handleOnClick, 100);\n    }\n  });\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        canGoLeft(board, indexRow, indexSquare) && dispatch(actionCreators.move(LEFT));\n      },\n      right: () => {\n        if (!finalized) {\n          canGoRight(board, indexRow, indexSquare) && dispatch(actionCreators.move(RIGHT));\n        } else {\n          alert.success(\"\".concat(MESSAGE_SUCCESS, \" \").concat(moves, \" movimientos\"));\n          dispatch({\n            type: actions.RESET\n          });\n        }\n      },\n      up: () => {\n        indexRow > 0 && canGoUp(board, indexRow, indexSquare) && dispatch(actionCreators.move(UP));\n      },\n      down: () => {\n        canGoDown(board, indexRow, indexSquare) && dispatch(actionCreators.move(DOWN));\n      }\n    });\n  });\n\n  const handleOnClick = () => {\n    if (!finalized) {\n      !start && setStart(true);\n      setDisableButtons(true);\n      checkMove(board, indexRow, indexSquare, position, dispatch);\n    } else {\n      setStart(false);\n      dispatch(actionCreators.notifyMoves(moves));\n      dispatch({\n        type: actions.RESET\n      });\n      setDisableButtons(false);\n      alert.success(\"\".concat(MESSAGE_SUCCESS, \" \").concat(moves, \" movimientos\"));\n    }\n  };\n\n  const handleOnReset = () => {\n    dispatch({\n      type: actions.RESET\n    });\n    setStart(false);\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: \"board\"\n  }, ArrowKeysReact.events, {\n    tabIndex: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"help\",\n    onClick: handleOnClick,\n    disabled: disableButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"P\\xEDdele ayuda a la aguilas\"), React.createElement(\"button\", {\n    className: \"reset\",\n    onClick: handleOnReset,\n    disabled: disableButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Resetear\")), board && board.map((row, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, row && row.map(square => React.createElement(Square, {\n    key: square.id,\n    enabled: square.enabled,\n    active: square.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/a/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useEffect","useState","ArrowKeysReact","useDispatch","useSelector","useAlert","actions","Square","actionCreators","RIGHT","LEFT","UP","DOWN","MESSAGE_SUCCESS","canGoUp","canGoDown","canGoRight","canGoLeft","checkMove","Board","dispatch","alert","start","setStart","disableButtons","setDisableButtons","state","board","position","finalized","indexRow","indexSquare","moves","setTimeout","handleOnClick","config","left","move","right","success","type","RESET","up","down","notifyMoves","handleOnReset","events","map","row","i","square","id","enabled","active"],"mappings":"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","sourcesContent":["  import React from 'react';\n  import { useEffect, useState } from 'react';\n  import ArrowKeysReact from 'arrow-keys-react';\n  import { useDispatch, useSelector } from 'react-redux'\n  import { useAlert } from \"react-alert\";\n\n  import { actions } from '../../redux/Board/actions';\n  import Square from './components/Square';\n  import { actionCreators } from '../../redux/Board/actions';\n  import { RIGHT, LEFT, UP, DOWN, MESSAGE_SUCCESS } from './constants';\n  import { canGoUp, canGoDown, canGoRight, canGoLeft, checkMove } from './utils';\n  import './Board.css';\n\n  function Board() {\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const [ start, setStart ] = useState(false);\n    const [ disableButtons, setDisableButtons ] = useState(false);\n\n    const { board, position, finalized, indexRow, indexSquare, moves } = useSelector(state => state.board);\n\n    useEffect(() => {\n      if (start) {\n        setTimeout(handleOnClick, 100);\n      }\n    });\n\n    useEffect(() => {\n      ArrowKeysReact.config({\n        left: () => {\n          canGoLeft(board, indexRow, indexSquare) && dispatch(actionCreators.move(LEFT));\n        },\n        right: () => {\n          if(!finalized) {\n            canGoRight(board, indexRow, indexSquare) && dispatch(actionCreators.move(RIGHT))\n          } else {\n            alert.success(`${MESSAGE_SUCCESS} ${moves} movimientos`);\n            dispatch({ type: actions.RESET });\n          }\n        },\n        up: () => {\n          indexRow > 0 && canGoUp(board, indexRow, indexSquare) && dispatch(actionCreators.move(UP));\n        },\n        down: () => {\n          canGoDown(board, indexRow, indexSquare) && dispatch(actionCreators.move(DOWN));\n        }\n      });\n    });\n\n    const handleOnClick = () => {\n      if(!finalized) {\n        !start && setStart(true);\n        setDisableButtons(true);\n        checkMove(board, indexRow, indexSquare, position, dispatch);\n      } else {\n        setStart(false);\n        dispatch(actionCreators.notifyMoves(moves))\n        dispatch({ type: actions.RESET });\n        setDisableButtons(false);\n        alert.success(`${MESSAGE_SUCCESS} ${moves} movimientos`);\n      }\n    };\n\n    const handleOnReset = () => {\n      dispatch({ type: actions.RESET });\n      setStart(false);\n    }\n\n    return (\n      <div className=\"board\" {...ArrowKeysReact.events} tabIndex=\"1\">\n        <div className=\"container-button\">\n          <button className=\"help\" onClick={handleOnClick} disabled={disableButtons}>Pídele ayuda a la aguilas</button>\n          <button className=\"reset\" onClick={handleOnReset} disabled={disableButtons}>Resetear</button>\n        </div>\n        {board && board.map((row, i) => (\n          <div key={i} className=\"row\">\n            {row && row.map((square) =>\n              <Square key={square.id} enabled={square.enabled} active={square.active} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  export default Board;\n"]},"metadata":{},"sourceType":"module"}