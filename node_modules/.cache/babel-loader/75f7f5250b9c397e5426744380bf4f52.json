{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _onLoading = require('../../effects/onLoading');\n\nvar _onLoading2 = _interopRequireDefault(_onLoading);\n\nvar _onSuccess = require('../../effects/onSuccess');\n\nvar _onSuccess2 = _interopRequireDefault(_onSuccess);\n\nvar _onFailure = require('../../effects/onFailure');\n\nvar _onFailure2 = _interopRequireDefault(_onFailure);\n\nvar _onSubscribe = require('../../effects/onSubscribe');\n\nvar _onSubscribe2 = _interopRequireDefault(_onSubscribe);\n\nvar _onUnsubscribe = require('../../effects/onUnsubscribe');\n\nvar _onUnsubscribe2 = _interopRequireDefault(_onUnsubscribe);\n\nvar _typeUtils = require('../../utils/typeUtils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Given a reducer description, it returns a reducerHandler with all success and failure cases\n\n\nfunction completeReducer(reducerDescription) {\n  if (!reducerDescription || (!reducerDescription.primaryActions || !reducerDescription.primaryActions.length) && (!reducerDescription.modalActions || !reducerDescription.modalActions.length)) {\n    throw new Error('Reducer description is incomplete, should contain at least an actions field to complete');\n  }\n\n  var reducerHandler = {};\n\n  if (reducerDescription.primaryActions) {\n    if (!(0, _typeUtils.isStringArray)(reducerDescription.primaryActions)) {\n      throw new Error('Primary actions must be a string array');\n    }\n\n    reducerDescription.primaryActions.forEach(function (actionName) {\n      reducerHandler[actionName] = (0, _onLoading2.default)();\n      reducerHandler[actionName + '_SUCCESS'] = (0, _onSuccess2.default)();\n      reducerHandler[actionName + '_FAILURE'] = (0, _onFailure2.default)();\n    });\n  }\n\n  if (reducerDescription.modalActions) {\n    if (!(0, _typeUtils.isStringArray)(reducerDescription.modalActions)) {\n      throw new Error('Modal actions must be a string array');\n    }\n\n    reducerDescription.modalActions.forEach(function (actionName) {\n      reducerHandler[actionName + '_OPEN'] = (0, _onSubscribe2.default)();\n      reducerHandler[actionName + '_CLOSE'] = (0, _onUnsubscribe2.default)();\n    });\n  }\n\n  if (reducerDescription.override) {\n    if (!(0, _typeUtils.isValidObject)(reducerDescription.override)) {\n      throw new Error('Reducer description containing a override is not an object');\n    }\n\n    reducerHandler = (0, _extends3.default)({}, reducerHandler, reducerDescription.override);\n  }\n\n  return reducerHandler;\n}\n\nexports.default = completeReducer;","map":null,"metadata":{},"sourceType":"script"}