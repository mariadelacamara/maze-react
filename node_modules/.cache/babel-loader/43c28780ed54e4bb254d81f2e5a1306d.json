{"ast":null,"code":"import _slicedToArray from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js\";\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAlert } from \"react-alert\";\nimport { actions } from '../../redux/Board/actions';\nimport Square from './components/Square';\nimport { actionCreators } from '../../redux/Board/actions';\nimport { RIGHT, LEFT, UP, DOWN, MESSAGE_SUCCESS } from './constants';\nimport { canGoUp, canGoDown, canGoRight, canGoLeft } from './utils';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        disableButtons = _useState4[0],\n        setDisableButtons = _useState4[1];\n\n  const _useSelector = useSelector(state => state.board),\n        board = _useSelector.board,\n        position = _useSelector.position,\n        finalized = _useSelector.finalized,\n        indexRow = _useSelector.indexRow,\n        indexSquare = _useSelector.indexSquare,\n        moves = _useSelector.moves;\n\n  useEffect(() => {\n    if (start) {\n      setTimeout(handleOnClick, 150);\n    }\n  });\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        board[indexRow][indexSquare - 1].enabled && dispatch(actionCreators.move(LEFT));\n      },\n      right: () => {\n        if (!finalized) {\n          board[indexRow][indexSquare + 1].enabled && dispatch(actionCreators.move(RIGHT));\n        } else {\n          alert.success(MESSAGE_SUCCESS);\n          dispatch({\n            type: actions.RESET\n          });\n        }\n      },\n      up: () => {\n        indexRow > 0 && board[indexRow - 1][indexSquare].enabled && dispatch(actionCreators.move(UP));\n      },\n      down: () => {\n        board[indexRow + 1][indexSquare].enabled && dispatch(actionCreators.move(DOWN));\n      }\n    });\n  }); // const handleOnClick = () => {\n  //   if(!finalized) {\n  //     !start && setStart(true);\n  //     setDisableButtons(true);\n  //     if (position === RIGHT && board[indexRow][indexSquare + 1].enabled) {\n  //       dispatch(actionCreators.move(RIGHT));\n  //       return;\n  //     }\n  //     if ((board[indexRow + 1][indexSquare].enabled) && (position !== UP)) {\n  //       dispatch(actionCreators.move(DOWN));\n  //       return;\n  //     } else if (board[indexRow][indexSquare - 1].enabled && (position !== RIGHT || position === LEFT)) {\n  //       dispatch(actionCreators.move(LEFT));\n  //       return;\n  //     } else if (board[indexRow][indexSquare + 1].enabled) {\n  //       dispatch(actionCreators.move(RIGHT));\n  //       return;\n  //     }\n  //     if (board[indexRow - 1] && board[indexRow - 1][indexSquare].enabled){\n  //       dispatch(actionCreators.move(UP));\n  //       return;\n  //     } else if (board[indexRow][indexSquare - 1].enabled) {\n  //       dispatch(actionCreators.move(LEFT));\n  //       return;\n  //     }\n  //   } else {\n  //     setStart(false);\n  //     dispatch(actionCreators.notifyMoves(moves))\n  //     dispatch({ type: actions.RESET });\n  //     setDisableButtons(false);\n  //     alert.success(MESSAGE_SUCCESS);\n  //   }\n  // };\n\n  const handleOnClick = () => {\n    if (!finalized) {\n      !start && setStart(true);\n      setDisableButtons(true);\n\n      if (board[indexRow + 1][indexSquare].enable && position !== UP) {\n        dispatch(actionCreators.move(DOWN));\n        return;\n      } else if (canGoLeft(board, indexRow, indexSquare) && (position !== RIGHT || position === LEFT)) {\n        dispatch(actionCreators.move(LEFT));\n        return;\n      } else if (canGoRight(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(RIGHT));\n        return;\n      } else if (canGoUp(board, indexRow, indexSquare)) {\n        dispatch(actionCreators.move(UP));\n        return;\n      }\n    } else {\n      setStart(false);\n      dispatch(actionCreators.notifyMoves(moves));\n      dispatch({\n        type: actions.RESET\n      });\n      setDisableButtons(false);\n      alert.success(MESSAGE_SUCCESS);\n    }\n  };\n\n  const handleOnReset = () => {\n    dispatch({\n      type: actions.RESET\n    });\n    setStart(false);\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: \"board\"\n  }, ArrowKeysReact.events, {\n    tabIndex: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"help\",\n    onClick: handleOnClick,\n    disabled: disableButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"P\\xEDdele ayuda a la aguilas\"), React.createElement(\"button\", {\n    className: \"reset\",\n    onClick: handleOnReset,\n    disabled: disableButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Resetear\")), board && board.map((row, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, row && row.map((square, i) => React.createElement(Square, {\n    key: i,\n    enabled: square.enabled,\n    active: square.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useEffect","useState","ArrowKeysReact","useDispatch","useSelector","useAlert","actions","Square","actionCreators","RIGHT","LEFT","UP","DOWN","MESSAGE_SUCCESS","canGoUp","canGoDown","canGoRight","canGoLeft","Board","dispatch","alert","start","setStart","disableButtons","setDisableButtons","state","board","position","finalized","indexRow","indexSquare","moves","setTimeout","handleOnClick","config","left","enabled","move","right","success","type","RESET","up","down","enable","notifyMoves","handleOnReset","events","map","row","i","square","active"],"mappings":"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","sourcesContent":["  import React from 'react';\n  import { useEffect, useState } from 'react';\n  import ArrowKeysReact from 'arrow-keys-react';\n  import { useDispatch, useSelector } from 'react-redux'\n  import { useAlert } from \"react-alert\";\n\n  import { actions } from '../../redux/Board/actions';\n  import Square from './components/Square';\n  import { actionCreators } from '../../redux/Board/actions';\n  import { RIGHT, LEFT, UP, DOWN, MESSAGE_SUCCESS } from './constants';\n  import { canGoUp, canGoDown, canGoRight, canGoLeft } from './utils';\n  import './Board.css';\n\n  function Board() {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const [ start, setStart ] = useState(false);\n    const [ disableButtons, setDisableButtons ] = useState(false);\n\n    const { board, position, finalized, indexRow, indexSquare, moves } = useSelector(state => state.board);\n\n    useEffect(() => {\n      if (start) {\n        setTimeout(handleOnClick, 150);\n      }\n    });\n\n    useEffect(() => {\n      ArrowKeysReact.config({\n        left: () => {\n          board[indexRow][indexSquare - 1].enabled && dispatch(actionCreators.move(LEFT));\n        },\n        right: () => {\n          if(!finalized) {\n            board[indexRow][indexSquare + 1].enabled && dispatch(actionCreators.move(RIGHT))\n          } else {\n            alert.success(MESSAGE_SUCCESS);\n            dispatch({ type: actions.RESET });\n          }\n        },\n        up: () => {\n          indexRow > 0 && board[indexRow - 1][indexSquare].enabled && dispatch(actionCreators.move(UP));\n        },\n        down: () => {\n          board[indexRow + 1][indexSquare].enabled && dispatch(actionCreators.move(DOWN));\n        }\n      });\n    });\n\n    // const handleOnClick = () => {\n    //   if(!finalized) {\n    //     !start && setStart(true);\n    //     setDisableButtons(true);\n    //     if (position === RIGHT && board[indexRow][indexSquare + 1].enabled) {\n    //       dispatch(actionCreators.move(RIGHT));\n    //       return;\n    //     }\n    //     if ((board[indexRow + 1][indexSquare].enabled) && (position !== UP)) {\n    //       dispatch(actionCreators.move(DOWN));\n    //       return;\n    //     } else if (board[indexRow][indexSquare - 1].enabled && (position !== RIGHT || position === LEFT)) {\n    //       dispatch(actionCreators.move(LEFT));\n    //       return;\n    //     } else if (board[indexRow][indexSquare + 1].enabled) {\n    //       dispatch(actionCreators.move(RIGHT));\n    //       return;\n    //     }\n    //     if (board[indexRow - 1] && board[indexRow - 1][indexSquare].enabled){\n    //       dispatch(actionCreators.move(UP));\n    //       return;\n    //     } else if (board[indexRow][indexSquare - 1].enabled) {\n    //       dispatch(actionCreators.move(LEFT));\n    //       return;\n    //     }\n    //   } else {\n    //     setStart(false);\n    //     dispatch(actionCreators.notifyMoves(moves))\n    //     dispatch({ type: actions.RESET });\n    //     setDisableButtons(false);\n    //     alert.success(MESSAGE_SUCCESS);\n    //   }\n    // };\n\n    const handleOnClick = () => {\n      if(!finalized) {\n        !start && setStart(true);\n        setDisableButtons(true);\n        if ((board[indexRow + 1][indexSquare].enable) && (position !== UP)) {\n          dispatch(actionCreators.move(DOWN));\n          return;\n        } else if (canGoLeft(board, indexRow, indexSquare) && (position !== RIGHT || position === LEFT)) {\n          dispatch(actionCreators.move(LEFT));\n          return;\n        } else if (canGoRight(board, indexRow, indexSquare)) {\n          dispatch(actionCreators.move(RIGHT));\n          return;\n        } else if (canGoUp(board, indexRow, indexSquare)){\n          dispatch(actionCreators.move(UP));\n          return;\n        }\n      } else {\n        setStart(false);\n        dispatch(actionCreators.notifyMoves(moves))\n        dispatch({ type: actions.RESET });\n        setDisableButtons(false);\n        alert.success(MESSAGE_SUCCESS);\n      }\n    };\n\n    const handleOnReset = () => {\n      dispatch({ type: actions.RESET });\n      setStart(false);\n    }\n\n    return (\n      <div className=\"board\" {...ArrowKeysReact.events} tabIndex=\"1\">\n        <div className=\"container-button\">\n          <button className=\"help\" onClick={handleOnClick} disabled={disableButtons}>Pídele ayuda a la aguilas</button>\n          <button className=\"reset\" onClick={handleOnReset} disabled={disableButtons}>Resetear</button>\n        </div>\n        {board && board.map((row, i) => (\n          <div key={i} className=\"row\">\n            {row && row.map((square, i) =>\n              <Square key={i} enabled={square.enabled} active={square.active} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  export default Board;\n"]},"metadata":{},"sourceType":"module"}