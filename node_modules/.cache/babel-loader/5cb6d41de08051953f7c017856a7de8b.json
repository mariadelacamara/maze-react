{"ast":null,"code":"import _slicedToArray from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js\";\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Grid from './components/Grid';\nimport { actionCreators } from '../../redux/Board/actions';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  const board = useSelector(state => state.board.board);\n  const wind = useSelector(state => state.board.wind);\n  const indexRow = useSelector(state => state.board.indexRow);\n  const indexGrid = useSelector(state => state.board.indexGrid);\n  useEffect(() => {\n    if (start) {\n      setTimeout(handleOnClick, 2000);\n    }\n  }, [board]);\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        board[indexRow][indexGrid - 1].enabled && dispatch(actionCreators.move('LEFT'));\n      },\n      right: () => {\n        board[indexRow][indexGrid + 1].enabled && dispatch(actionCreators.move('RIGHT'));\n      },\n      up: () => {\n        board[indexRow - 1][indexGrid].enabled && dispatch(actionCreators.move('UP'));\n      },\n      down: () => {\n        board[indexRow + 1][indexGrid].enabled && dispatch(actionCreators.move('DOWN'));\n      }\n    });\n  });\n\n  const handleOnClick = () => {\n    if (!wind) {\n      if (!start) {\n        setStart(true);\n      }\n\n      if (board[indexRow + 1][indexGrid].enabled) {\n        dispatch(actionCreators.move('DOWN'));\n      }\n\n      if (board[indexRow - 1] && board[indexRow - 1][indexGrid].enabled) {\n        dispatch(actionCreators.move('UP'));\n      }\n\n      if (board[indexRow - 1] && board[indexRow][indexGrid - 1].enabled) {\n        dispatch(actionCreators.move('LEFT'));\n      }\n\n      if (board[indexRow][indexGrid + 1].enabled) {\n        dispatch(actionCreators.move('RIGHT'));\n      }\n    }\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: \"board\"\n  }, ArrowKeysReact.events, {\n    tabIndex: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"help\",\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Pidele ayuda a la aguilas\"), board && board.map((row, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, row && row.map((grid, i) => React.createElement(Grid, {\n    key: i,\n    enabled: grid.enabled,\n    active: grid.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useEffect","useState","ArrowKeysReact","useDispatch","useSelector","Grid","actionCreators","Board","dispatch","start","setStart","board","state","wind","indexRow","indexGrid","setTimeout","handleOnClick","config","left","enabled","move","right","up","down","events","map","row","i","grid","active"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Grid from './components/Grid';\nimport { actionCreators } from '../../redux/Board/actions';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n  const [ start, setStart ] = useState(false);\n  const board = useSelector(state => state.board.board);\n  const wind = useSelector(state => state.board.wind);\n  const indexRow = useSelector(state => state.board.indexRow);\n  const indexGrid = useSelector(state => state.board.indexGrid);\n\n  useEffect(() => {\n    if (start) {\n      setTimeout(handleOnClick, 2000);\n    }\n  }, [board]);\n\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        board[indexRow][indexGrid - 1].enabled && dispatch(actionCreators.move('LEFT'));\n      },\n      right: () => {\n        board[indexRow][indexGrid + 1].enabled && dispatch(actionCreators.move('RIGHT'));\n      },\n      up: () => {\n        board[indexRow - 1][indexGrid].enabled && dispatch(actionCreators.move('UP'));\n      },\n      down: () => {\n        board[indexRow + 1][indexGrid].enabled && dispatch(actionCreators.move('DOWN'));\n      }\n    });\n  });\n\n  const handleOnClick = () => {\n    if(!wind) {\n      if(!start) { setStart(true)}\n      if(board[indexRow + 1][indexGrid].enabled) { dispatch(actionCreators.move('DOWN'))}\n      if(board[indexRow - 1] && board[indexRow - 1][indexGrid].enabled) { dispatch(actionCreators.move('UP'))}\n      if(board[indexRow - 1] && board[indexRow][indexGrid - 1].enabled) { dispatch(actionCreators.move('LEFT'))}\n      if(board[indexRow][indexGrid + 1].enabled) { dispatch(actionCreators.move('RIGHT'))}\n    }\n  };\n\n  return (\n    <div className=\"board\" {...ArrowKeysReact.events} tabIndex=\"1\">\n      <button className=\"help\" onClick={handleOnClick}>Pidele ayuda a la aguilas</button>\n      {board && board.map((row, i) => (\n        <div key={i} className=\"row\">\n          {row && row.map((grid, i) =>\n            <Grid key={i} enabled={grid.enabled} active={grid.active} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}