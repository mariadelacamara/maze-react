{"ast":null,"code":"import PropTypes from 'prop-types';\nimport Immutable from 'seamless-immutable';\nimport { actions } from './actions';\nconst defaultState = {\n  moves: 0\n};\nexport function reducer(state = Immutable(defaultState), action) {\n  switch (action.type) {\n    case 'MOVE':\n      {\n        return state.merge({\n          moves: state.moves + 1\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport function propTypes() {\n  return {\n    board: PropTypes.shape({\n      message: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['info', 'error', 'success']).isRequired,\n      title: PropTypes.string\n    })\n  };\n}","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/redux/Board/reducer.js"],"names":["PropTypes","Immutable","actions","defaultState","moves","reducer","state","action","type","merge","propTypes","board","shape","message","string","isRequired","oneOf","title"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAGL,SAAS,CAACE,YAAD,CAAlC,EAAkDI,MAAlD,EAA0D;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AAAa;AACX,eAAOF,KAAK,CAACG,KAAN,CAAY;AAAEL,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,SAAZ,CAAP;AACD;;AACD;AAAS;AACP,eAAOE,KAAP;AACD;AANH;AAQD;AAED,OAAO,SAASI,SAAT,GAAqB;AAC1B,SAAO;AACLC,IAAAA,KAAK,EAAEX,SAAS,CAACY,KAAV,CAAgB;AACrBC,MAAAA,OAAO,EAAEb,SAAS,CAACc,MAAV,CAAiBC,UADL;AAErBP,MAAAA,IAAI,EAAER,SAAS,CAACgB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CAAhB,EAA8CD,UAF/B;AAGrBE,MAAAA,KAAK,EAAEjB,SAAS,CAACc;AAHI,KAAhB;AADF,GAAP;AAOD","sourcesContent":["import PropTypes from 'prop-types';\nimport Immutable from 'seamless-immutable';\n\nimport { actions } from './actions';\n\nconst defaultState = {\n  moves: 0\n};\n\nexport function reducer(state = Immutable(defaultState), action) {\n  switch (action.type) {\n    case 'MOVE': {\n      return state.merge({ moves: state.moves + 1});\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function propTypes() {\n  return {\n    board: PropTypes.shape({\n      message: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['info', 'error', 'success']).isRequired,\n      title: PropTypes.string\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}