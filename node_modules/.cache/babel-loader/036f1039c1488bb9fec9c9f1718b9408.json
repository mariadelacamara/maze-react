{"ast":null,"code":"import _defineProperty from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport Immutable from 'seamless-immutable';\nimport { actions } from './actions';\nconst defaultState = {\n  message: ''\n};\nexport function reducer(state = Immutable(defaultState), action) {\n  switch (action.type) {\n    case actions.MOVE:\n      {\n        return state.merge(_objectSpread({}, action.payload));\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport function propTypes() {\n  return {\n    alert: PropTypes.shape({\n      message: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['info', 'error', 'success']).isRequired,\n      title: PropTypes.string\n    })\n  };\n}","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/redux/Board/reducer.js"],"names":["PropTypes","Immutable","actions","defaultState","message","reducer","state","action","type","MOVE","merge","payload","propTypes","alert","shape","string","isRequired","oneOf","title"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;AAIA,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAGL,SAAS,CAACE,YAAD,CAAlC,EAAkDI,MAAlD,EAA0D;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,OAAO,CAACO,IAAb;AAAmB;AACjB,eAAOH,KAAK,CAACI,KAAN,mBAAiBH,MAAM,CAACI,OAAxB,EAAP;AACD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AANH;AAQD;AAED,OAAO,SAASM,SAAT,GAAqB;AAC1B,SAAO;AACLC,IAAAA,KAAK,EAAEb,SAAS,CAACc,KAAV,CAAgB;AACrBV,MAAAA,OAAO,EAAEJ,SAAS,CAACe,MAAV,CAAiBC,UADL;AAErBR,MAAAA,IAAI,EAAER,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CAAhB,EAA8CD,UAF/B;AAGrBE,MAAAA,KAAK,EAAElB,SAAS,CAACe;AAHI,KAAhB;AADF,GAAP;AAOD","sourcesContent":["import PropTypes from 'prop-types';\nimport Immutable from 'seamless-immutable';\n\nimport { actions } from './actions';\n\nconst defaultState = {\n  message: ''\n};\n\nexport function reducer(state = Immutable(defaultState), action) {\n  switch (action.type) {\n    case actions.MOVE: {\n      return state.merge({ ...action.payload });\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport function propTypes() {\n  return {\n    alert: PropTypes.shape({\n      message: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['info', 'error', 'success']).isRequired,\n      title: PropTypes.string\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}