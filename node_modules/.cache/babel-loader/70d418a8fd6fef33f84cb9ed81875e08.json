{"ast":null,"code":"import _slicedToArray from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from './components/Grid';\nimport './Board.css';\n\nfunction Board({\n  matrix\n}) {\n  const _useState = useState(matrix),\n        _useState2 = _slicedToArray(_useState, 2),\n        board = _useState2[0],\n        setBoard = _useState2[1];\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n  }, []);\n\n  const downHandler = () => console.log(\"flecha abajo\");\n\n  const upHandler = () => console - log(\"flecha arriba\");\n\n  return React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"help\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Pidele ayuda a la aguilas\"), board && board.map(row => React.createElement(\"div\", {\n    key: row,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, row && row.map((grid, i) => React.createElement(Grid, {\n    key: i,\n    enabled: grid.enabled,\n    active: grid.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })))));\n}\n\nBoard.propTypes = {\n  matrix: PropTypes.arrayOf(PropTypes.shape({\n    enabled: PropTypes.bool,\n    active: PropTypes.bool\n  }))\n};\nexport default Board;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useState","useEffect","PropTypes","Grid","Board","matrix","board","setBoard","window","addEventListener","downHandler","upHandler","console","log","map","row","grid","i","enabled","active","propTypes","arrayOf","shape","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,aAAP;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA2B;AAAA,oBACGL,QAAQ,CAACK,MAAD,CADX;AAAA;AAAA,QACjBC,KADiB;AAAA,QACVC,QADU;;AAGzBN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,WAAnC;AACAF,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCE,SAAjC;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,WAAW,GAAG,MAAME,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA1B;;AAEA,QAAMF,SAAS,GAAG,MAAMC,OAAO,GAACC,GAAG,CAAC,eAAD,CAAnC;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEGP,KAAK,IAAIA,KAAK,CAACQ,GAAN,CAAUC,GAAG,IACrB;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,KACd,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,CAAX;AAAc,IAAA,OAAO,EAAED,IAAI,CAACE,OAA5B;AAAqC,IAAA,MAAM,EAAEF,IAAI,CAACG,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,CADV,CADQ,CAFZ,CADF;AAYD;;AAEDf,KAAK,CAACgB,SAAN,GAAkB;AAChBf,EAAAA,MAAM,EAAEH,SAAS,CAACmB,OAAV,CACNnB,SAAS,CAACoB,KAAV,CAAgB;AAAEJ,IAAAA,OAAO,EAAEhB,SAAS,CAACqB,IAArB;AAA2BJ,IAAAA,MAAM,EAAEjB,SAAS,CAACqB;AAA7C,GAAhB,CADM;AADQ,CAAlB;AAMA,eAAenB,KAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from './components/Grid';\nimport './Board.css';\n\nfunction Board({ matrix }) {\n  const [ board, setBoard ] = useState(matrix);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n  }, []);\n\n  const downHandler = () => console.log(\"flecha abajo\");\n\n  const upHandler = () => console-log(\"flecha arriba\");\n\n  return (\n    <div className=\"board\">\n      <button className=\"help\">Pidele ayuda a la aguilas</button>\n      {board && board.map(row => (\n        <div key={row} className=\"row\">\n          {row && row.map((grid, i) =>\n            <Grid key={i} enabled={grid.enabled} active={grid.active} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nBoard.propTypes = {\n  matrix: PropTypes.arrayOf(\n    PropTypes.shape({ enabled: PropTypes.bool, active: PropTypes.bool })\n  )\n};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}