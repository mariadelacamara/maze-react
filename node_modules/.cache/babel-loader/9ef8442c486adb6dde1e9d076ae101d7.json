{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Grid from './components/Grid';\nimport { actionCreators } from '../../redux/Board/actions';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n  const board = useSelector(state => state.board.board);\n  const indexRow = useSelector(state => state.board.indexRow);\n  const indexGrid = useSelector(state => state.board.indexGrid);\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        board[indexRow][indexGrid - 1].enabled && dispatch(actionCreators.move('LEFT'));\n      },\n      right: () => {\n        board[indexRow][indexGrid + 1].enabled && dispatch(actionCreators.move('RIGHT'));\n      },\n      up: () => {\n        board[indexRow - 1][indexGrid].enabled && dispatch(actionCreators.move('UP'));\n      },\n      down: () => {\n        board[indexRow + 1][indexGrid].enabled && dispatch(actionCreators.move('DOWN'));\n      }\n    });\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: \"board\"\n  }, ArrowKeysReact.events, {\n    tabIndex: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), board && board.map((row, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, row && row.map((grid, i) => React.createElement(Grid, {\n    key: i,\n    enabled: grid.enabled,\n    active: grid.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useEffect","ArrowKeysReact","useDispatch","useSelector","Grid","actionCreators","Board","dispatch","board","state","indexRow","indexGrid","config","left","enabled","move","right","up","down","events","map","row","i","grid","active"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAO,aAAP;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAAzB;AACA,QAAME,QAAQ,GAAGP,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYE,QAAtB,CAA5B;AACA,QAAMC,SAAS,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYG,SAAtB,CAA7B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,cAAc,CAACW,MAAf,CAAsB;AACpBC,MAAAA,IAAI,EAAE,MAAM;AACVL,QAAAA,KAAK,CAACE,QAAD,CAAL,CAAgBC,SAAS,GAAG,CAA5B,EAA+BG,OAA/B,IAA0CP,QAAQ,CAACF,cAAc,CAACU,IAAf,CAAoB,MAApB,CAAD,CAAlD;AACD,OAHmB;AAIpBC,MAAAA,KAAK,EAAE,MAAM;AACXR,QAAAA,KAAK,CAACE,QAAD,CAAL,CAAgBC,SAAS,GAAG,CAA5B,EAA+BG,OAA/B,IAA0CP,QAAQ,CAACF,cAAc,CAACU,IAAf,CAAoB,OAApB,CAAD,CAAlD;AACD,OANmB;AAOpBE,MAAAA,EAAE,EAAE,MAAM;AACRT,QAAAA,KAAK,CAACE,QAAQ,GAAG,CAAZ,CAAL,CAAoBC,SAApB,EAA+BG,OAA/B,IAA0CP,QAAQ,CAACF,cAAc,CAACU,IAAf,CAAoB,IAApB,CAAD,CAAlD;AACD,OATmB;AAUpBG,MAAAA,IAAI,EAAE,MAAM;AACVV,QAAAA,KAAK,CAACE,QAAQ,GAAG,CAAZ,CAAL,CAAoBC,SAApB,EAA+BG,OAA/B,IAA0CP,QAAQ,CAACF,cAAc,CAACU,IAAf,CAAoB,MAApB,CAAD,CAAlD;AACD;AAZmB,KAAtB;AAcD,GAfQ,CAAT;AAiBA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA2Bd,cAAc,CAACkB,MAA1C;AAAkD,IAAA,QAAQ,EAAC,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEGX,KAAK,IAAIA,KAAK,CAACY,GAAN,CAAU,CAACC,GAAD,EAAMC,CAAN,KAClB;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,SAAS,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACG,IAAD,EAAOD,CAAP,KACd,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,CAAX;AAAc,IAAA,OAAO,EAAEC,IAAI,CAACT,OAA5B;AAAqC,IAAA,MAAM,EAAES,IAAI,CAACC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,CADV,CADQ,CAFZ,CADF;AAYD;;AAED,eAAelB,KAAf","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Grid from './components/Grid';\nimport { actionCreators } from '../../redux/Board/actions';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n  const board = useSelector(state => state.board.board);\n  const indexRow = useSelector(state => state.board.indexRow);\n  const indexGrid = useSelector(state => state.board.indexGrid);\n\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        board[indexRow][indexGrid - 1].enabled && dispatch(actionCreators.move('LEFT'));\n      },\n      right: () => {\n        board[indexRow][indexGrid + 1].enabled && dispatch(actionCreators.move('RIGHT'));\n      },\n      up: () => {\n        board[indexRow - 1][indexGrid].enabled && dispatch(actionCreators.move('UP'));\n      },\n      down: () => {\n        board[indexRow + 1][indexGrid].enabled && dispatch(actionCreators.move('DOWN'));\n      }\n    });\n  });\n\n  return (\n    <div className=\"board\" {...ArrowKeysReact.events} tabIndex=\"1\">\n      {/* <button className=\"help\" onClick={handleDown}>Pidele ayuda a la aguilas</button> */}\n      {board && board.map((row, i) => (\n        <div key={i} className=\"row\">\n          {row && row.map((grid, i) =>\n            <Grid key={i} enabled={grid.enabled} active={grid.active} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}