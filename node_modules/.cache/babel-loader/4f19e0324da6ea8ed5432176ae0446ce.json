{"ast":null,"code":"import _slicedToArray from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js\";\nimport React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport Grid from './components/Grid';\nimport './Board.css';\n\nfunction Board({\n  matrix\n}) {\n  const _useState = useState(matrix),\n        _useState2 = _slicedToArray(_useState, 2),\n        board = _useState2[0],\n        setBoard = _useState2[1];\n\n  const _useState3 = useState(board[0].findIndex(elem => elem.active)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gandalfIndexGrid = _useState4[0],\n        setGandalfIndexGrid = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        gandalfIndexRow = _useState6[0],\n        setGandalfIndexRow = _useState6[1];\n\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        handleLeft();\n      },\n      right: () => {\n        handleRight();\n      },\n      up: () => {\n        handleUp();\n      },\n      down: () => {\n        handleDown();\n      }\n    });\n  });\n  const handleDown = useCallback(() => {\n    if (board[gandalfIndexRow + 1][gandalfIndexGrid].enabled) {\n      const matrixUpdated = [...board.slice(0, gandalfIndexRow + 1), [...board[gandalfIndexRow + 1].slice(0, gandalfIndexGrid), {\n        active: true,\n        enabled: true\n      }, ...board[gandalfIndexRow + 1].slice(gandalfIndexGrid + 1)], ...board.slice(gandalfIndexRow + 2)];\n      setGandalfIndexRow(gandalfIndexRow + 1);\n      setBoard(matrixUpdated);\n    }\n  });\n  const handleRight = useCallback(() => {\n    if (board[gandalfIndexRow][gandalfIndexGrid + 1].enabled) {\n      const matrixUpdated = [...board.slice(0, gandalfIndexRow), [...board[gandalfIndexRow].slice(0, gandalfIndexGrid + 1), {\n        active: true,\n        enabled: true\n      }, ...board[gandalfIndexRow].slice(gandalfIndexGrid + 2)], ...board.slice(gandalfIndexRow + 1)];\n      setGandalfIndexGrid(gandalfIndexGrid + 1);\n      setGandalfIndexRow(gandalfIndexRow);\n      setBoard(matrixUpdated);\n    }\n  });\n  const handleUp = useCallback(() => {\n    if (board[gandalfIndexRow - 1][gandalfIndexGrid].enabled) {\n      const matrixUpdated = [...board.slice(0, gandalfIndexRow - 1), [...board[gandalfIndexRow - 1].slice(0, gandalfIndexGrid), {\n        active: true,\n        enabled: true\n      }, ...board[gandalfIndexRow - 1].slice(gandalfIndexGrid + 1)], ...board.slice(gandalfIndexRow)];\n      setGandalfIndexRow(gandalfIndexRow - 1);\n      setBoard(matrixUpdated);\n    }\n  });\n  const handleLeft = useCallback(() => {\n    if (board[gandalfIndexRow][gandalfIndexGrid - 1].enabled) {\n      const matrixUpdated = [...board.slice(0, gandalfIndexRow), [...board[gandalfIndexRow].slice(0, gandalfIndexGrid - 1), {\n        active: true,\n        enabled: true\n      }, ...board[gandalfIndexRow].slice(gandalfIndexGrid - 2)], ...board.slice(gandalfIndexRow + 1)];\n      setGandalfIndexGrid(gandalfIndexGrid - 1);\n      setBoard(matrixUpdated);\n    }\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: \"board\"\n  }, ArrowKeysReact.events, {\n    tabIndex: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"help\",\n    onClick: handleDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Pidele ayuda a la aguilas\"), board && board.map(row => React.createElement(\"div\", {\n    key: row,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, row && row.map((grid, i) => React.createElement(Grid, {\n    key: i,\n    enabled: grid.enabled,\n    active: grid.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))));\n}\n\nBoard.propTypes = {\n  matrix: PropTypes.arrayOf(PropTypes.shape({\n    enabled: PropTypes.bool,\n    active: PropTypes.bool\n  }))\n};\nexport default Board;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useState","useEffect","useCallback","PropTypes","ArrowKeysReact","Grid","Board","matrix","board","setBoard","findIndex","elem","active","gandalfIndexGrid","setGandalfIndexGrid","gandalfIndexRow","setGandalfIndexRow","config","left","handleLeft","right","handleRight","up","handleUp","down","handleDown","enabled","matrixUpdated","slice","events","map","row","grid","i","propTypes","arrayOf","shape","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowKeysReact from 'arrow-keys-react';\n\nimport Grid from './components/Grid';\nimport './Board.css';\n\nfunction Board({ matrix }) {\n  const [ board, setBoard ] = useState(matrix);\n  const [ gandalfIndexGrid, setGandalfIndexGrid ] = useState(board[0].findIndex(elem => elem.active));\n  const [ gandalfIndexRow, setGandalfIndexRow ] = useState(0);\n\n\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        handleLeft();\n      },\n      right: () => {\n        handleRight();\n      },\n      up: () => {\n        handleUp();\n      },\n      down: () => {\n        handleDown();\n      }\n    });\n  });\n\n  const handleDown = useCallback(\n    () => {\n      if (board[gandalfIndexRow + 1][gandalfIndexGrid].enabled) {\n        const matrixUpdated = [\n          ...board.slice(0, gandalfIndexRow + 1),\n          [\n            ...board[gandalfIndexRow + 1].slice(0, gandalfIndexGrid),\n            {\n              active: true,\n              enabled: true\n            },\n            ...board[gandalfIndexRow + 1].slice(gandalfIndexGrid + 1 ),\n          ],\n          ...board.slice(gandalfIndexRow + 2)\n        ];\n        setGandalfIndexRow(gandalfIndexRow + 1);\n        setBoard(matrixUpdated);\n      }\n    }\n  );\n\n  const handleRight = useCallback(\n    () => {\n      if (board[gandalfIndexRow][gandalfIndexGrid + 1].enabled) {\n        const matrixUpdated = [\n          ...board.slice(0, gandalfIndexRow),\n          [\n            ...board[gandalfIndexRow].slice(0, gandalfIndexGrid + 1),\n            {\n              active: true,\n              enabled: true\n            },\n            ...board[gandalfIndexRow].slice(gandalfIndexGrid + 2),\n          ],\n          ...board.slice(gandalfIndexRow + 1)\n        ];\n        setGandalfIndexGrid(gandalfIndexGrid + 1);\n        setGandalfIndexRow(gandalfIndexRow);\n        setBoard(matrixUpdated);\n      }\n    }\n  );\n\n  const handleUp = useCallback(\n    () => {\n      if (board[gandalfIndexRow - 1][gandalfIndexGrid].enabled) {\n        const matrixUpdated = [\n          ...board.slice(0, gandalfIndexRow - 1),\n          [\n            ...board[gandalfIndexRow - 1].slice(0, gandalfIndexGrid),\n            {\n              active: true,\n              enabled: true\n            },\n            ...board[gandalfIndexRow - 1].slice(gandalfIndexGrid + 1),\n          ],\n          ...board.slice(gandalfIndexRow)\n        ];\n        setGandalfIndexRow(gandalfIndexRow - 1);\n        setBoard(matrixUpdated);\n      }\n    }\n  );\n\n  const handleLeft = useCallback(\n    () => {\n      if (board[gandalfIndexRow][gandalfIndexGrid - 1].enabled) {\n        const matrixUpdated = [\n          ...board.slice(0, gandalfIndexRow),\n          [\n            ...board[gandalfIndexRow].slice(0, gandalfIndexGrid - 1),\n            {\n              active: true,\n              enabled: true\n            },\n            ...board[gandalfIndexRow].slice(gandalfIndexGrid - 2),\n          ],\n          ...board.slice(gandalfIndexRow + 1)\n        ];\n        setGandalfIndexGrid(gandalfIndexGrid - 1);\n        setBoard(matrixUpdated);\n      }\n    }\n  );\n\n\n  return (\n    <div className=\"board\" {...ArrowKeysReact.events} tabIndex=\"1\">\n      <button className=\"help\" onClick={handleDown}>Pidele ayuda a la aguilas</button>\n      {board && board.map(row => (\n        <div key={row} className=\"row\">\n          {row && row.map((grid, i) =>\n            <Grid key={i} enabled={grid.enabled} active={grid.active} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nBoard.propTypes = {\n  matrix: PropTypes.arrayOf(\n    PropTypes.shape({ enabled: PropTypes.bool, active: PropTypes.bool })\n  )\n};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}