{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction baseThunkAction(_ref) {\n  var _this = this;\n\n  var type = _ref.type,\n      target = _ref.target,\n      service = _ref.service,\n      _ref$payload = _ref.payload,\n      payload = _ref$payload === undefined ? function () {} : _ref$payload,\n      _ref$successSelector = _ref.successSelector,\n      successSelector = _ref$successSelector === undefined ? function (response) {\n    return response.data;\n  } : _ref$successSelector,\n      _ref$failureSelector = _ref.failureSelector,\n      failureSelector = _ref$failureSelector === undefined ? function (response) {\n    return response.problem;\n  } : _ref$failureSelector;\n  var selector = typeof payload === 'function' ? payload : function () {\n    return payload;\n  };\n  return {\n    prebehavior: function prebehavior(dispatch) {\n      return dispatch({\n        type: type,\n        target: target\n      });\n    },\n    apiCall: function () {\n      var _ref2 = (0, _asyncToGenerator3.default)(\n      /*#__PURE__*/\n      _regenerator2.default.mark(function _callee(getState) {\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt('return', service(selector(getState())));\n\n              case 1:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this);\n      }));\n\n      return function apiCall(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    determination: function determination(response) {\n      return response.ok;\n    },\n    success: function success(dispatch, response) {\n      return dispatch({\n        type: type + '_SUCCESS',\n        target: target,\n        payload: successSelector(response)\n      });\n    },\n    failure: function failure(dispatch, response) {\n      return dispatch({\n        type: type + '_FAILURE',\n        target: target,\n        payload: failureSelector(response)\n      });\n    }\n  };\n}\n\nexports.default = baseThunkAction;","map":null,"metadata":{},"sourceType":"script"}