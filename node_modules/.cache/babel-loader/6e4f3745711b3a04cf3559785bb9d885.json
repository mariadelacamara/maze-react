{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'react-router-redux';\nimport { fetchMiddleware } from 'redux-recompose';\nimport createHistory from 'history/createBrowserHistory';\nimport { reducer as board } from './Board/reducer';\nexport const history = createHistory();\nconst reducers = combineReducers({\n  board\n});\nconst middlewares = [thunk, routerMiddleware(history), fetchMiddleware];\nconst enhancers = [applyMiddleware(...middlewares)]; // eslint-disable-next-line no-underscore-dangle\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = (state, action) => reducers(state, action);\n\nconst store = createStore(rootReducer, composeEnhancers(...enhancers));\nexport default store;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","thunk","routerMiddleware","fetchMiddleware","createHistory","reducer","board","history","reducers","middlewares","enhancers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","state","action","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,SAASC,OAAO,IAAIC,KAApB,QAAiC,iBAAjC;AAEA,OAAO,MAAMC,OAAO,GAAGH,aAAa,EAA7B;AAEP,MAAMI,QAAQ,GAAGR,eAAe,CAAC;AAAEM,EAAAA;AAAF,CAAD,CAAhC;AAEA,MAAMG,WAAW,GAAG,CAACR,KAAD,EAAQC,gBAAgB,CAACK,OAAD,CAAxB,EAAmCJ,eAAnC,CAApB;AACA,MAAMO,SAAS,GAAG,CAACZ,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAAlB,C,CAEA;;AACA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cd,OAAxE;;AAEA,MAAMe,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmBR,QAAQ,CAACO,KAAD,EAAQC,MAAR,CAA/C;;AAEA,MAAMC,KAAK,GAAGpB,WAAW,CAACiB,WAAD,EAAcH,gBAAgB,CAAC,GAAGD,SAAJ,CAA9B,CAAzB;AAEA,eAAeO,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'react-router-redux';\nimport { fetchMiddleware } from 'redux-recompose';\nimport createHistory from 'history/createBrowserHistory';\n\nimport { reducer as board } from './Board/reducer';\n\nexport const history = createHistory();\n\nconst reducers = combineReducers({ board });\n\nconst middlewares = [thunk, routerMiddleware(history), fetchMiddleware];\nconst enhancers = [applyMiddleware(...middlewares)];\n\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = (state, action) => reducers(state, action);\n\nconst store = createStore(rootReducer, composeEnhancers(...enhancers));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}