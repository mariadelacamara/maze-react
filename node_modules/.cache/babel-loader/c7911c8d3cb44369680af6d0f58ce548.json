{"ast":null,"code":"import _toConsumableArray from\"/Users/a/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import Immutable from'seamless-immutable';import{actions}from'./actions';import{matrix}from'../../constants';import{resetPosition,checkFinalized}from'./utils';import{UP,DOWN,LEFT,RIGHT}from'../../components/Board/constants';var defaultState={moves:0,board:matrix,indexSquare:matrix[0].findIndex(function(elem){return elem.active;}),indexRow:0,finalized:false,position:DOWN};export function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:Immutable(defaultState);var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actions.MOVE_DOWN:{var indexSquare=state.indexSquare,indexRow=state.indexRow,board=state.board;var resetBoard=resetPosition(board,indexSquare,indexRow);var boardUpdated=[].concat(_toConsumableArray(resetBoard.slice(0,indexRow+1)),[[].concat(_toConsumableArray(resetBoard[indexRow+1].slice(0,indexSquare)),[resetBoard[indexRow+1][indexSquare].merge({active:true})],_toConsumableArray(resetBoard[indexRow+1].slice(indexSquare+1)))],_toConsumableArray(resetBoard.slice(indexRow+2)));return state.merge({moves:state.moves+1,board:boardUpdated,indexRow:indexRow+1,indexSquare:indexSquare,position:DOWN});}case actions.MOVE_RIGHT:{var _indexSquare=state.indexSquare,_indexRow=state.indexRow,_board=state.board;var _resetBoard=resetPosition(_board,_indexSquare,_indexRow);var _boardUpdated=[].concat(_toConsumableArray(_resetBoard.slice(0,_indexRow)),[[].concat(_toConsumableArray(_resetBoard[_indexRow].slice(0,_indexSquare+1)),[_resetBoard[_indexRow][_indexSquare+1].merge({active:true})],_toConsumableArray(_resetBoard[_indexRow].slice(_indexSquare+2)))],_toConsumableArray(_resetBoard.slice(_indexRow+1)));return state.merge({moves:state.moves+1,board:_boardUpdated,indexSquare:_indexSquare+1,indexRow:_indexRow,position:RIGHT,finalized:checkFinalized(_board,_indexRow,_indexSquare+1)});}case actions.MOVE_UP:{var _indexSquare2=state.indexSquare,_indexRow2=state.indexRow,_board2=state.board;var _resetBoard2=resetPosition(_board2,_indexSquare2,_indexRow2);var _boardUpdated2=[].concat(_toConsumableArray(_resetBoard2.slice(0,_indexRow2-1)),[[].concat(_toConsumableArray(_resetBoard2[_indexRow2-1].slice(0,_indexSquare2)),[_resetBoard2[_indexRow2-1][_indexSquare2].merge({active:true})],_toConsumableArray(_resetBoard2[_indexRow2-1].slice(_indexSquare2+1)))],_toConsumableArray(_resetBoard2.slice(_indexRow2)));return state.merge({moves:state.moves+1,board:_boardUpdated2,indexRow:state.indexRow-1,indexSquare:_indexSquare2,position:UP});}case actions.MOVE_LEFT:{var _indexSquare3=state.indexSquare,_indexRow3=state.indexRow,_board3=state.board;var _resetBoard3=resetPosition(_board3,_indexSquare3,_indexRow3);var _boardUpdated3=[].concat(_toConsumableArray(_resetBoard3.slice(0,_indexRow3)),[[].concat(_toConsumableArray(_resetBoard3[_indexRow3].slice(0,_indexSquare3-1)),[_resetBoard3[_indexRow3][_indexSquare3-1].merge({active:true})],_toConsumableArray(_resetBoard3[_indexRow3].slice(_indexSquare3)))],_toConsumableArray(_resetBoard3.slice(_indexRow3+1)));return state.merge({moves:state.moves+1,board:_boardUpdated3,indexRow:_indexRow3,indexSquare:_indexSquare3-1,position:LEFT,finalized:checkFinalized(_board3,_indexRow3,_indexSquare3-1)});}case actions.RESET:{return state.merge({moves:0,indexSquare:matrix[0].findIndex(function(elem){return elem.active;}),indexRow:0,board:matrix,finalized:false});}default:{return state;}}}","map":{"version":3,"sources":["/Users/a/Documents/Proyects/maze-react/src/redux/Board/reducer.js"],"names":["Immutable","actions","matrix","resetPosition","checkFinalized","UP","DOWN","LEFT","RIGHT","defaultState","moves","board","indexSquare","findIndex","elem","active","indexRow","finalized","position","reducer","state","action","type","MOVE_DOWN","resetBoard","boardUpdated","slice","merge","MOVE_RIGHT","MOVE_UP","MOVE_LEFT","RESET"],"mappings":"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","sourcesContent":["import Immutable from 'seamless-immutable';\n\nimport { actions } from './actions';\nimport { matrix } from '../../constants';\nimport { resetPosition, checkFinalized } from './utils';\nimport { UP, DOWN, LEFT, RIGHT } from '../../components/Board/constants';\n\nconst defaultState = {\n  moves: 0,\n  board: matrix,\n  indexSquare: matrix[0].findIndex(elem => elem.active),\n  indexRow: 0,\n  finalized: false,\n  position: DOWN\n};\n\nexport function reducer(state = Immutable(defaultState), action) {\n  switch (action.type) {\n    case actions.MOVE_DOWN: {\n      const { indexSquare, indexRow, board } = state;\n      const resetBoard = resetPosition(board, indexSquare, indexRow);\n      const boardUpdated = [\n        ...resetBoard.slice(0, indexRow + 1),\n        [\n          ...resetBoard[indexRow + 1].slice(0, indexSquare),\n          resetBoard[indexRow + 1][indexSquare].merge({active: true}),\n          ...resetBoard[indexRow + 1].slice(indexSquare + 1 ),\n        ],\n        ...resetBoard.slice(indexRow + 2)\n      ];\n      return state.merge({\n        moves: state.moves + 1,\n        board: boardUpdated,\n        indexRow: indexRow + 1,\n        indexSquare: indexSquare,\n        position: DOWN\n      });\n    }\n    case actions.MOVE_RIGHT: {\n      const { indexSquare, indexRow, board } = state;\n      const resetBoard = resetPosition(board, indexSquare, indexRow);\n      const boardUpdated = [\n        ...resetBoard.slice(0, indexRow),\n        [\n          ...resetBoard[indexRow].slice(0, indexSquare + 1),\n          resetBoard[indexRow][indexSquare + 1].merge({active: true}),\n          ...resetBoard[indexRow].slice(indexSquare + 2),\n        ],\n        ...resetBoard.slice(indexRow + 1)\n      ];\n      return state.merge({\n        moves: state.moves + 1,\n        board: boardUpdated,\n        indexSquare: indexSquare + 1,\n        indexRow: indexRow,\n        position: RIGHT,\n        finalized: checkFinalized(board, indexRow, indexSquare + 1)\n      });\n    }\n    case actions.MOVE_UP: {\n      const { indexSquare, indexRow, board } = state;\n      const resetBoard = resetPosition(board, indexSquare, indexRow);\n      const boardUpdated = [\n        ...resetBoard.slice(0, indexRow - 1),\n        [\n          ...resetBoard[indexRow - 1].slice(0, indexSquare),\n          resetBoard[indexRow - 1][indexSquare].merge({active: true}),\n\n          ...resetBoard[indexRow - 1].slice(indexSquare + 1),\n        ],\n        ...resetBoard.slice(indexRow)\n      ];\n      return state.merge({\n        moves: state.moves + 1,\n        board: boardUpdated,\n        indexRow: state.indexRow - 1,\n        indexSquare: indexSquare,\n        position: UP\n      });\n    }\n    case actions.MOVE_LEFT: {\n      const { indexSquare, indexRow, board } = state;\n      const resetBoard = resetPosition(board, indexSquare, indexRow);\n      const boardUpdated = [\n        ...resetBoard.slice(0, indexRow),\n        [\n          ...resetBoard[indexRow].slice(0, indexSquare - 1),\n          resetBoard[indexRow][indexSquare - 1].merge({active: true}),\n\n          ...resetBoard[indexRow].slice(indexSquare),\n        ],\n        ...resetBoard.slice(indexRow + 1)\n      ];\n      return state.merge({\n        moves: state.moves + 1,\n        board: boardUpdated,\n        indexRow: indexRow,\n        indexSquare: indexSquare - 1,\n        position: LEFT,\n        finalized: checkFinalized(board, indexRow, indexSquare - 1)\n      });\n    }\n    case actions.RESET: {\n      return state.merge({\n        moves: 0,\n        indexSquare: matrix[0].findIndex(elem => elem.active),\n        indexRow: 0,\n        board: matrix,\n        finalized: false\n      })\n    }\n    default: {\n      return state; \n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}