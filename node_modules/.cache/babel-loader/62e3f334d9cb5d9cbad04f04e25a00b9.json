{"ast":null,"code":"import _slicedToArray from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js\";\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAlert } from \"react-alert\";\nimport { actions } from '../../redux/Board/actions';\nimport Square from './components/Square';\nimport { actionCreators } from '../../redux/Board/actions';\nimport { RIGHT, LEFT, UP, DOWN, MESSAGE_SUCCESS } from './constants';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        disableButtons = _useState4[0],\n        setDisableButtons = _useState4[1];\n\n  const board = useSelector(state => state.board.board);\n  const finalized = useSelector(state => state.board.finalized);\n  const indexRow = useSelector(state => state.board.indexRow);\n  const indexSquare = useSelector(state => state.board.indexSquare);\n  const position = useSelector(state => state.board.position);\n  const moves = useSelector(state => state.board.moves);\n  useEffect(() => {\n    if (start) {\n      setTimeout(handleOnClick, 150);\n    }\n  });\n  useEffect(() => {\n    if (finalized) {\n      dispatch(actionCreators.notifyMoves(moves));\n    }\n  });\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        board[indexRow][indexSquare - 1].enabled && dispatch(actionCreators.move(LEFT));\n      },\n      right: () => {\n        if (!finalized) {\n          board[indexRow][indexSquare + 1].enabled && dispatch(actionCreators.move(RIGHT));\n        } else {\n          alert.success(MESSAGE_SUCCESS);\n          dispatch({\n            type: actions.RESET\n          });\n        }\n      },\n      up: () => {\n        board[indexRow - 1][indexSquare].enabled && dispatch(actionCreators.move(UP));\n      },\n      down: () => {\n        board[indexRow + 1][indexSquare].enabled && dispatch(actionCreators.move(DOWN));\n      }\n    });\n  });\n\n  const handleOnClick = () => {\n    if (!finalized) {\n      if (!start) {\n        setStart(true);\n      }\n\n      setDisableButtons(true);\n\n      if (position === RIGHT && board[indexRow][indexSquare + 1].enabled) {\n        dispatch(actionCreators.move(RIGHT));\n        return;\n      }\n\n      if (board[indexRow + 1][indexSquare].enabled && position !== UP) {\n        dispatch(actionCreators.move(DOWN));\n        return;\n      } else if (board[indexRow][indexSquare - 1].enabled && (position !== RIGHT || position === LEFT)) {\n        dispatch(actionCreators.move(LEFT));\n        return;\n      } else if (board[indexRow][indexSquare + 1].enabled) {\n        dispatch(actionCreators.move(RIGHT));\n        return;\n      }\n\n      if (board[indexRow - 1] && board[indexRow - 1][indexSquare].enabled) {\n        dispatch(actionCreators.move(UP));\n        return;\n      } else if (board[indexRow][indexSquare - 1].enabled) {\n        dispatch(actionCreators.move(LEFT));\n        return;\n      }\n    } else {\n      setStart(false);\n      dispatch({\n        type: actions.RESET\n      });\n      dispatch(actionCreators.notifyMoves());\n      setDisableButtons(false);\n      alert.success(MESSAGE_SUCCESS);\n    }\n  };\n\n  const handleOnReset = () => {\n    dispatch({\n      type: actions.RESET\n    });\n    setStart(false);\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: \"board\"\n  }, ArrowKeysReact.events, {\n    tabIndex: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"help\",\n    onClick: handleOnClick,\n    disabled: disableButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"P\\xEDdele ayuda a la aguilas\"), React.createElement(\"button\", {\n    className: \"reset\",\n    onClick: handleOnReset,\n    disabled: disableButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Resetear\")), board && board.map((row, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, row && row.map((square, i) => React.createElement(Square, {\n    key: i,\n    enabled: square.enabled,\n    active: square.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useEffect","useState","ArrowKeysReact","useDispatch","useSelector","useAlert","actions","Square","actionCreators","RIGHT","LEFT","UP","DOWN","MESSAGE_SUCCESS","Board","dispatch","alert","start","setStart","disableButtons","setDisableButtons","board","state","finalized","indexRow","indexSquare","position","moves","setTimeout","handleOnClick","notifyMoves","config","left","enabled","move","right","success","type","RESET","up","down","handleOnReset","events","map","row","i","square","active"],"mappings":"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","sourcesContent":["  import React from 'react';\n  import { useEffect, useState } from 'react';\n  import ArrowKeysReact from 'arrow-keys-react';\n  import { useDispatch, useSelector } from 'react-redux'\n  import { useAlert } from \"react-alert\";\n\n  import { actions } from '../../redux/Board/actions';\n  import Square from './components/Square';\n  import { actionCreators } from '../../redux/Board/actions';\n  import { RIGHT, LEFT, UP, DOWN, MESSAGE_SUCCESS } from './constants';\n  import './Board.css';\n\n  function Board() {\n    const dispatch = useDispatch();\n    const alert = useAlert();\n    const [ start, setStart ] = useState(false);\n    const [ disableButtons, setDisableButtons ] = useState(false);\n    const board = useSelector(state => state.board.board);\n    const finalized = useSelector(state => state.board.finalized);\n    const indexRow = useSelector(state => state.board.indexRow);\n    const indexSquare = useSelector(state => state.board.indexSquare);\n    const position = useSelector(state => state.board.position);\n    const moves = useSelector(state => state.board.moves);\n\n    useEffect(() => {\n      if (start) {\n        setTimeout(handleOnClick, 150);\n      }\n    });\n\n    useEffect(() => {\n      if (finalized) {\n        dispatch(actionCreators.notifyMoves(moves))\n      }\n    });\n\n    useEffect(() => {\n      ArrowKeysReact.config({\n        left: () => {\n          board[indexRow][indexSquare - 1].enabled && dispatch(actionCreators.move(LEFT));\n        },\n        right: () => {\n          if(!finalized) {\n            board[indexRow][indexSquare + 1].enabled && dispatch(actionCreators.move(RIGHT))\n          } else {\n            alert.success(MESSAGE_SUCCESS);\n            dispatch({ type: actions.RESET });\n          }\n        },\n        up: () => {\n          board[indexRow - 1][indexSquare].enabled && dispatch(actionCreators.move(UP));\n        },\n        down: () => {\n          board[indexRow + 1][indexSquare].enabled && dispatch(actionCreators.move(DOWN));\n        }\n      });\n    });\n\n    const handleOnClick = () => {\n      if(!finalized) {\n        if(!start) { setStart(true) }\n        setDisableButtons(true);\n        if (position === RIGHT && board[indexRow][indexSquare + 1].enabled) {\n          dispatch(actionCreators.move(RIGHT));\n          return;\n        }\n        if ((board[indexRow + 1][indexSquare].enabled) && (position !== UP)) {\n          dispatch(actionCreators.move(DOWN));\n          return;\n        } else if (board[indexRow][indexSquare - 1].enabled && (position !== RIGHT || position === LEFT)) {\n          dispatch(actionCreators.move(LEFT));\n          return;\n        } else if (board[indexRow][indexSquare + 1].enabled) {\n          dispatch(actionCreators.move(RIGHT));\n          return;\n        }\n        if (board[indexRow - 1] && board[indexRow - 1][indexSquare].enabled){\n          dispatch(actionCreators.move(UP));\n          return;\n        } else if (board[indexRow][indexSquare - 1].enabled) {\n          dispatch(actionCreators.move(LEFT));\n          return;\n        }\n      } else {\n        setStart(false);\n        dispatch({ type: actions.RESET });\n        dispatch(actionCreators.notifyMoves())\n        setDisableButtons(false);\n        alert.success(MESSAGE_SUCCESS);\n      }\n    };\n\n    const handleOnReset = () => {\n      dispatch({ type: actions.RESET });\n      setStart(false);\n    }\n\n    return (\n      <div className=\"board\" {...ArrowKeysReact.events} tabIndex=\"1\">\n        <div className=\"container-button\">\n          <button className=\"help\" onClick={handleOnClick} disabled={disableButtons}>Pídele ayuda a la aguilas</button>\n          <button className=\"reset\" onClick={handleOnReset} disabled={disableButtons}>Resetear</button>\n        </div>\n        {board && board.map((row, i) => (\n          <div key={i} className=\"row\">\n            {row && row.map((square, i) =>\n              <Square key={i} enabled={square.enabled} active={square.active} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  export default Board;\n"]},"metadata":{},"sourceType":"module"}