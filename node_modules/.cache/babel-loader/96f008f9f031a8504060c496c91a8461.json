{"ast":null,"code":"import _slicedToArray from \"/home/nicolas/Documents/Proyects/maze-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js\";\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Grid from './components/Grid';\nimport { actionCreators } from '../../redux/Board/actions';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  const board = useSelector(state => state.board.board);\n  const wind = useSelector(state => state.board.wind);\n  const indexRow = useSelector(state => state.board.indexRow);\n  const indexGrid = useSelector(state => state.board.indexGrid);\n  const lastIndexRow = useSelector(state => state.board.lastIndexRow);\n  const lastIndexGrid = useSelector(state => state.board.lastIndexGrid);\n  const position = useSelector(state => state.board.position);\n  const moves = useSelector(state => state.board.moves);\n  useEffect(() => {\n    if (start) {\n      setTimeout(handleOnClick, 200);\n    }\n  }, [moves]);\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        board[indexRow][indexGrid - 1].enabled && dispatch(actionCreators.move('LEFT'));\n      },\n      right: () => {\n        board[indexRow][indexGrid + 1].enabled && dispatch(actionCreators.move('RIGHT'));\n      },\n      up: () => {\n        board[indexRow - 1][indexGrid].enabled && dispatch(actionCreators.move('UP'));\n      },\n      down: () => {\n        board[indexRow + 1][indexGrid].enabled && dispatch(actionCreators.move('DOWN'));\n      }\n    });\n  });\n\n  const handleOnClick = () => {\n    if (!wind) {\n      if (!start) {\n        setStart(true);\n      } // DOWN\n\n\n      if ((board[indexRow + 1][indexGrid].enabled || indexRow === 0) && position !== \"UP\" && !board[indexRow][indexGrid + 2].enabled) {\n        dispatch(actionCreators.move('DOWN'));\n        return;\n      } else if (board[indexRow][indexGrid - 1].enabled && (position !== \"RIGHT\" || position === \"LEFT\")) {\n        dispatch(actionCreators.move('LEFT'));\n        return;\n      } else if (board[indexRow][indexGrid + 1].enabled) {\n        dispatch(actionCreators.move('RIGHT'));\n        return;\n      }\n\n      if (board[indexRow - 1] && board[indexRow - 1][indexGrid].enabled) {\n        dispatch(actionCreators.move('UP'));\n        return;\n      }\n    }\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: \"board\"\n  }, ArrowKeysReact.events, {\n    tabIndex: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"help\",\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Pidele ayuda a la aguilas\"), board && board.map((row, i) => React.createElement(\"div\", {\n    key: i,\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, row && row.map((grid, i) => React.createElement(Grid, {\n    key: i,\n    enabled: grid.enabled,\n    active: grid.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/nicolas/Documents/Proyects/maze-react/src/components/Board/index.js"],"names":["React","useEffect","useState","ArrowKeysReact","useDispatch","useSelector","Grid","actionCreators","Board","dispatch","start","setStart","board","state","wind","indexRow","indexGrid","lastIndexRow","lastIndexGrid","position","moves","setTimeout","handleOnClick","config","left","enabled","move","right","up","down","events","map","row","i","grid","active"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Grid from './components/Grid';\nimport { actionCreators } from '../../redux/Board/actions';\nimport './Board.css';\n\nfunction Board() {\n  const dispatch = useDispatch();\n  const [ start, setStart ] = useState(false);\n  const board = useSelector(state => state.board.board);\n  const wind = useSelector(state => state.board.wind);\n  const indexRow = useSelector(state => state.board.indexRow);\n  const indexGrid = useSelector(state => state.board.indexGrid);\n  const lastIndexRow = useSelector(state => state.board.lastIndexRow);\n  const lastIndexGrid = useSelector(state => state.board.lastIndexGrid);\n  const position = useSelector(state => state.board.position);\n  const moves = useSelector(state => state.board.moves);\n\n\n  useEffect(() => {\n    if (start) {\n      setTimeout(handleOnClick, 200);\n    }\n  }, [moves]);\n\n  useEffect(() => {\n    ArrowKeysReact.config({\n      left: () => {\n        board[indexRow][indexGrid - 1].enabled && dispatch(actionCreators.move('LEFT'));\n      },\n      right: () => {\n        board[indexRow][indexGrid + 1].enabled && dispatch(actionCreators.move('RIGHT'));\n      },\n      up: () => {\n        board[indexRow - 1][indexGrid].enabled && dispatch(actionCreators.move('UP'));\n      },\n      down: () => {\n        board[indexRow + 1][indexGrid].enabled && dispatch(actionCreators.move('DOWN'));\n      }\n    });\n  });\n\n  const handleOnClick = () => {\n    if(!wind) {\n      if(!start) { setStart(true) }\n      // DOWN\n      if((board[indexRow + 1][indexGrid].enabled || indexRow === 0) && (position !== \"UP\") && (!board[indexRow][indexGrid + 2].enabled)) {\n        dispatch(actionCreators.move('DOWN'));\n        return;\n      } else if (board[indexRow][indexGrid - 1].enabled && (position !== \"RIGHT\" || position === \"LEFT\")) {\n        dispatch(actionCreators.move('LEFT'));\n        return;\n      } else if(board[indexRow][indexGrid + 1].enabled ) {\n        dispatch(actionCreators.move('RIGHT'));\n        return;\n      }\n      if(board[indexRow - 1] && board[indexRow - 1][indexGrid].enabled){\n        dispatch(actionCreators.move('UP'));\n        return;\n      }\n    }\n  };\n\n  return (\n    <div className=\"board\" {...ArrowKeysReact.events} tabIndex=\"1\">\n      <button className=\"help\" onClick={handleOnClick}>Pidele ayuda a la aguilas</button>\n      {board && board.map((row, i) => (\n        <div key={i} className=\"row\">\n          {row && row.map((grid, i) =>\n            <Grid key={i} enabled={grid.enabled} active={grid.active} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}